<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"
	default-lazy-init="true">

	<description>Shiro安全配置</description>
	
	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroDbRealm" />
		<property name="sessionManager" ref="sessionManager"></property>
		<property name="cacheManager" ref="redisCacheManager" />
	</bean>

	<!-- 項目自定义的Realm, 所有accountService依赖的dao都需要用depends-on声明 -->
	<bean id="shiroDbRealm" class="com.performance.oa.service.account.ShiroDbRealm">
	</bean>
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 超时时间 -->
		<property name="globalSessionTimeout" value="3600000" />
		<property name="sessionDAO" ref="shiroSessionDao" />
		<property name="sessionIdCookie" ref="sharesession" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<!-- 定时检查失效的session -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
	</bean>
	<bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="SHAREJSESSIONID" />
	</bean>
	<bean id="shiroSessionDao"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO" />
	<!-- 定时清理僵尸session，Shiro会启用一个后台守护线程定时执行清理操作 用户直接关闭浏览器造成的孤立会话 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<property name="interval" value="3600000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	<!-- Redis Session Start -->
	<bean id="redisCacheManager" class="com.performance.commons.shiro.RedisCacheManager"><!-- 自定义cacheManager -->
		<property name="redisManager" ref="redisManager" />
	</bean>
	<bean id="redisManager" class="com.performance.commons.shiro.RedisManager">
		<property name="jedisPool" ref="yncJedisPool"></property>
	</bean>
	<bean id="yncJedisPool" class="com.performance.commons.redis.pool.JedisDirectPool">
		<constructor-arg index="0" value="yncRedis1" />
		<constructor-arg index="1" ref="yncHostAndPort" />
		<constructor-arg index="2" ref="jedisPoolConfig"></constructor-arg>
	</bean>
	<bean id="yncHostAndPort" class="redis.clients.jedis.HostAndPort">
		<constructor-arg index="0" value="${redis.host}" />
		<constructor-arg index="1" value="${redis.port}" type="int" />
	</bean>
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="300" /> <!-- 最大能够保持idel状态的对象数 -->
		<property name="maxTotal" value="60000" /> <!-- 最大分配的对象数 -->
		<!-- 获得一个jedis实例的时候是否检查连接可用性（ping()） -->
		<property name="testOnBorrow" value="true" />
		<!-- return 一个jedis实例给pool时，是否检查连接可用性（ping()） -->
		<property name="testOnReturn" value="true" />
		<!-- idle状态监测用异步线程evict进行检查， -->
		<property name="testWhileIdle" value="true" />
		<!-- 一次最多evict的pool里的jedis实例个数 -->
		<property name="numTestsPerEvictionRun" value="10" />
	</bean>
	<!-- Redis Session Stop -->
	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/login/dispatch" />
		<property name="filterChainDefinitions">
			<value>
				/login = authc
				/logout = logout
				/static/** = anon
				/admin/department/listAjax=anon
				/admin/employe/listAjax=anon
				/admin/** = roles[hr]
				/** = user
				/admin/department/** =anon
				/admin/employe/** =anon
				<!-- /leaderAssessment/**=anon /adminLeaderAssessment/**=anon /adminEmploye/**=anon 
					/satisfaction/**=anon /project/**=anon /efficiencyAdmin/**=anon /adminDepartment/**=anon 
					/projectAdmin/**=anon /efficiency/**=anon /register/** = anon /** = user -->
			</value>
		</property>
	</bean>

	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache-shiro.xml" />
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
 
	
</beans>